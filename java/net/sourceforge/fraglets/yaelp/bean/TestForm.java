/*
 * TestForm.java
 *
 * Created on November 6, 2002, 12:25 PM
 */

package net.sourceforge.fraglets.yaelp.bean;

import java.net.URL;
import net.sourceforge.fraglets.yaelp.action.AboutAction;
import net.sourceforge.fraglets.yaelp.action.ActionContext;
import net.sourceforge.fraglets.yaelp.action.AfterFilterAction;
import net.sourceforge.fraglets.yaelp.action.ClassFilterAction;
import net.sourceforge.fraglets.yaelp.action.CultureFilterAction;
import net.sourceforge.fraglets.yaelp.action.GenericAction;
import net.sourceforge.fraglets.yaelp.action.GuildFilterAction;
import net.sourceforge.fraglets.yaelp.action.LevelFilterAction;
import net.sourceforge.fraglets.yaelp.action.PropertyEditorAction;
import net.sourceforge.fraglets.yaelp.action.PropertyFilterAction;
import net.sourceforge.fraglets.yaelp.model.AvatarFilter;

/**
 *
 * @author  marion@users.sourceforge.net
 */
public class TestForm extends javax.swing.JFrame implements ActionContext {
    
    /** Creates new form TestForm */
    public TestForm() {
        initComponents();
        GenericAction.setActionContext(this, this);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        javax.swing.JMenu fileMenu;
        javax.swing.JMenu newFilterMenu;
        net.sourceforge.fraglets.yaelp.action.ShowLicenseAction xpLicenseAction;
        net.sourceforge.fraglets.yaelp.action.ShowLicenseAction gplLicenseAction;
        javax.swing.JMenuBar menuBar;
        net.sourceforge.fraglets.yaelp.action.ShowLicenseAction xtLicenseAction;
        javax.swing.JMenu editMenu;
        javax.swing.JSeparator jSeparator1;
        javax.swing.JMenu helpMenu;

        gplLicenseAction = new net.sourceforge.fraglets.yaelp.action.ShowLicenseAction();
        xpLicenseAction = new net.sourceforge.fraglets.yaelp.action.ShowLicenseAction();
        xtLicenseAction = new net.sourceforge.fraglets.yaelp.action.ShowLicenseAction();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        filterMenu = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JSeparator();
        newFilterMenu = new javax.swing.JMenu();
        editMenu = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenu();

        gplLicenseAction.setCommand("gplLicense");
        gplLicenseAction.setResource("gpl.txt");
        gplLicenseAction.setTitle("YAELP License");
        xpLicenseAction.setCommand("xpLicense");
        xpLicenseAction.setResource("copying_xp.txt");
        xpLicenseAction.setTitle("XP License");
        xtLicenseAction.setCommand("xtLicense");
        xtLicenseAction.setResource("copying_xt.txt");
        xtLicenseAction.setTitle("XT License");

        setTitle("Testing");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        fileMenu.setText("file");
        fileMenu.setName("fileMenu");
        Defaults.configure(fileMenu);
        menuBar.add(fileMenu);

        filterMenu.setText("filter");
        filterMenu.setName("filterMenu");
        Defaults.configure(filterMenu);
        filterMenu.add(jSeparator1);

        newFilterMenu.setText("Menu");
        newFilterMenu.setName("newFilterMenu");
        Defaults.configure(newFilterMenu);
        newFilterMenu.add(Defaults.configure(new AfterFilterAction()));
        newFilterMenu.add(Defaults.configure(new ClassFilterAction()));
        newFilterMenu.add(Defaults.configure(new CultureFilterAction()));
        newFilterMenu.add(Defaults.configure(new LevelFilterAction()));
        newFilterMenu.add(Defaults.configure(new GuildFilterAction()));
        newFilterMenu.add(Defaults.configure(new PropertyFilterAction()));
        filterMenu.add(newFilterMenu);

        menuBar.add(filterMenu);

        editMenu.setText("edit");
        editMenu.setName("editMenu");
        Defaults.configure(editMenu);
        editMenu.add(Defaults.configure(new PropertyEditorAction()));
        menuBar.add(editMenu);

        helpMenu.setText("help");
        helpMenu.setName("helpMenu");
        Defaults.configure(helpMenu);
        helpMenu.add(Defaults.configure(new AboutAction()));
        helpMenu.add(gplLicenseAction);
        helpMenu.add(xpLicenseAction);
        helpMenu.add(xtLicenseAction);
        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setSize(new java.awt.Dimension(400, 300));
        setLocation((screenSize.width-400)/2,(screenSize.height-300)/2);
    }//GEN-END:initComponents
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new TestForm().show();
    }
    
    public String getApplicationName() {
        return "Test Form";
    }    
    
    public URL getResource(String localName) {
        return TestForm.class.getResource("/net/sourceforge/fraglets/yaelp/"+localName);
    }
    
    public String getResourceString(String key) {
        return Defaults.getString(key);
    }
    
    public String getVersion() {
        return java.util.ResourceBundle.getBundle("net/sourceforge/fraglets/yaelp/version").getString("version");
    }
    
    public Object getCurrentSelection() {
        return null;
    }
    
    public void appendFilter(String name, AvatarFilter filter) {
        javax.swing.JCheckBoxMenuItem menuItem =
            new javax.swing.JCheckBoxMenuItem(name, true);
        menuItem.putClientProperty(FILTER_PROPERTY, filter);
        menuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                refreshFilter();
            }
        });
        filterMenu.insert(menuItem, filterMenu.getItemCount()-1);
//        refreshFilter();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu filterMenu;
    // End of variables declaration//GEN-END:variables

    /** Client property key for filter property.  */
    public static final String FILTER_PROPERTY = "RosterFrame.filter";    
    
}
