/*
 * PropertyInput.java
 *
 * Created on 12. Juli 2002, 15:05
 */

package net.sourceforge.fraglets.yaelp.bean;

import javax.swing.UIManager;
import javax.swing.JDialog;
import javax.swing.JComponent;

/**
 *
 * @author  marion@users.sourceforge.net
 */
public class PropertyInput extends JDialog {
    /** Cancel button pressed. */
    public static final int CANCEL_OPTION = 0;
    
    /** OK button pressed. */
    public static final int OK_OPTION = 1;
    
    /** Bean constructor. */
    public PropertyInput() {
        initComponents();
        getRootPane().setDefaultButton(okButton);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        dialogLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        valueLabel = new javax.swing.JLabel();
        valueField = new javax.swing.JTextField();
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setTitle("Property");
        setModal(true);
        setName("PropertyInput");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        dialogLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dialogLabel.setIcon(UIManager.getIcon("OptionPane.questionIcon"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 4, 5);
        getContentPane().add(dialogLabel, gridBagConstraints);

        nameLabel.setText(java.util.ResourceBundle.getBundle("net/sourceforge/fraglets/yaelp/YaelpResources").getString("PropertyInput.nameLabel"));
        nameLabel.setLabelFor(nameField);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 4, 5);
        getContentPane().add(nameLabel, gridBagConstraints);

        nameField.setColumns(15);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 4, 5);
        getContentPane().add(nameField, gridBagConstraints);

        valueLabel.setText(java.util.ResourceBundle.getBundle("net/sourceforge/fraglets/yaelp/YaelpResources").getString("PropertyInput.valueLabel"));
        valueLabel.setLabelFor(valueField);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 4, 5);
        getContentPane().add(valueLabel, gridBagConstraints);

        valueField.setColumns(15);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 4, 5);
        getContentPane().add(valueField, gridBagConstraints);

        okButton.setMnemonic(UIManager.getInt("OptionPane.okButtonMnemonic"));
        okButton.setText(UIManager.getString("OptionPane.okButtonText"));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(okButton);

        cancelButton.setMnemonic(UIManager.getInt("OptionPane.cancelButtonMnemonic"));
        cancelButton.setText(UIManager.getString("OptionPane.cancelButtonText"));
        cancelButton.setDefaultCapable(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(cancelButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 4, 5);
        getContentPane().add(buttonPanel, gridBagConstraints);

        pack();
    }//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // Add your handling code here:
        result = CANCEL_OPTION;
        closeDialog(null);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // Add your handling code here:
        result = OK_OPTION;
        closeDialog(null);
    }//GEN-LAST:event_okButtonActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    public int showDialog(java.awt.Component parent) {
        result = CANCEL_OPTION;
        setLocationRelativeTo(parent);
        show();
        return result;
    }
    
    /** Getter for property name.
     * @return Value of property name.
     */
    public String getPropertyName() {
        return nameField.getText();
    }    
    
    /** Setter for property name.
     * @param name New value of property name.
     */
    public void setPropertyName(String name) {
        nameField.setText(name);
    }
    
    /** Getter for property value.
     * @return Value of property value.
     */
    public String getPropertyValue() {
        return valueField.getText();
    }
    
    /** Setter for property value.
     * @param value New value of property value.
     */
    public void setPropertyValue(String value) {
        valueField.setText(value);
    }
    
    /** Getter for property result.
     * @return Value of property result.
     */
    public int getResult() {
        return this.result;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel dialogLabel;
    private javax.swing.JTextField valueField;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables

    /** Holds value of property result. */
    private int result;    
    
}
